akka {
    loglevel = DEBUG
    loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
    actor {
        provider = cluster
        creation-timeout = 30s
        ask-timeout = 50s
        serializers {
            json = "DiceGame.Akka.Infrastructure.Akka.EventSerializer, DiceGame.Akka.Infrastructure"
            bytes = "Akka.Serialization.ByteArraySerializer, Akka"
        }
        serialization-bindings {
            "System.Byte[]" = bytes
            "System.Object" = json
        }
    }
    remote {
        dot-netty.tcp {
            port = 8081
            hostname = localhost
        }
    }
    cluster {
        seed-nodes = ["akka.tcp://DiceGameSystem@localhost:8081"]
        roles = ["dicegame", "engine"]
        min-nr-of-members = 1
        pub-sub {
            name = distributedPubSubMediator
            gossip-interval = 1s
            removed-time-to-live = 120s
            max-delta-elements = 3000
            routing-logic = broadcast
        }
    }
    persistence {
        journal {
            plugin = "akka.persistence.journal.sql-server"
            sql-server {
                # qualified type name of the SQL Server persistence journal actor
                class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
            
                # dispatcher used to drive journal actor
                plugin-dispatcher = "akka.actor.default-dispatcher"
                
                # connection string used for database access
                connection-string = "Data Source=localhost;Initial Catalog=GameEngine;Integrated Security=True;"
            
                # default SQL commands timeout
                connection-timeout = 30s
            
                # SQL server schema name to table corresponding with persistent journal
                schema-name = Event
            
                # SQL server table corresponding with persistent journal
                table-name = Events
            
                # should corresponding journal table be initialized automatically
                auto-initialize = on
            
                # timestamp provider used for generation of journal entries timestamps
                timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
            
                # metadata table
                metadata-table-name = Metadata
            }
        }
    }
    extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider,Akka.Cluster.Tools"]
}
